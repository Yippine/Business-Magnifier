version: '3.8'

services:
  # MongoDB 資料庫服務
  mongodb:
    image: mongo:7.0
    container_name: mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: business-magnifier
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongodb/init:/docker-entrypoint-initdb.d:ro
      - ./db:/data/db-mount
    networks:
      - business-magnifier-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Next.js 開發環境服務
  app-dev:
    container_name: app-dev
    build:
      context: .
      dockerfile: Dockerfile.dev
    env_file:
      - .env.local
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/business-magnifier?authSource=admin
      - NODE_ENV=development
      - GOOGLE_AI_API_KEY=${GOOGLE_AI_API_KEY:-}
      - NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=${NEXT_PUBLIC_GOOGLE_MAPS_API_KEY:-}
      - JWT_SECRET=${JWT_SECRET:-default-jwt-secret-for-dev}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - .:/app
      - /app/node_modules
      - /app/.next
      - ./db:/app/db
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - business-magnifier-network
    profiles:
      - dev  # 開發環境 profile

  # Next.js 生產環境服務 (用於生產環境測試)
  app-prod:
    container_name: app-prod
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env.local
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/business-magnifier?authSource=admin
      - NODE_ENV=production
      - GOOGLE_AI_API_KEY=${GOOGLE_AI_API_KEY:-}
      - NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=${NEXT_PUBLIC_GOOGLE_MAPS_API_KEY:-}
      - JWT_SECRET=${JWT_SECRET:-default-jwt-secret-for-prod}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - .:/app
      - /app/node_modules
      - /app/.next
      - ./db:/app/db
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - business-magnifier-network
    profiles:
      - prod  # 生產環境測試 profile

  # MongoDB Express (資料庫管理介面，開發環境使用)
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
      ME_CONFIG_BASICAUTH_USERNAME: ""
      ME_CONFIG_BASICAUTH_PASSWORD: ""
      ME_CONFIG_SITE_BASEURL: "/"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - business-magnifier-network
    profiles:
      - tools  # 管理工具 profile
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

# 資料卷
volumes:
  mongodb_data:
    driver: local

# 網路
networks:
  business-magnifier-network:
    driver: bridge